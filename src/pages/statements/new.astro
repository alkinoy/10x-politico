---
/**
 * New Statement Page
 * Path: /statements/new
 *
 * Provides a comprehensive form for authenticated users to submit new political statements.
 * Includes politician selection (searchable dropdown), date/time picker, and statement text
 * with character counter. Handles validation, error messages, and redirects after submission.
 *
 * Authentication Required: Yes
 */

import Layout from "@/layouts/Layout.astro";
import NewStatementForm from "@/components/statements/NewStatementForm";
import { getSupabaseClientAnon } from "@/db/client";
import { PoliticianService } from "@/lib/services/politician-service";
import type { PoliticianDTO } from "@/types";

// Check if user is authenticated
const token = Astro.cookies.get("sb-access-token")?.value;

if (!token) {
  // Not authenticated, redirect to auth page with return URL
  return Astro.redirect(`/auth?returnUrl=/statements/new`);
}

// Verify token is valid
const supabase = getSupabaseClientAnon();
const {
  data: { user },
  error: authError,
} = await supabase.auth.getUser(token);

if (!user || authError) {
  // Invalid token, redirect to auth
  return Astro.redirect(`/auth?returnUrl=/statements/new`);
}

// Fetch politicians list for the selector
// Fetch all politicians sorted by last name for client-side filtering
let politicians: PoliticianDTO[] = [];
let fetchError: string | null = null;

try {
  const politicianService = new PoliticianService();
  const result = await politicianService.getAllPoliticians({
    page: 1,
    limit: 1000,
    sort: "last_name",
    order: "asc",
  });
  politicians = result.data;
} catch (error) {
  fetchError = "Failed to load politicians list";
  console.error("Error fetching politicians:", error);
}
---

<Layout title="Add New Statement - SpeechKarma">
  <main class="min-h-screen bg-background">
    <div class="container mx-auto max-w-3xl px-4 py-8 sm:py-12">
      {
        fetchError ? (
          <div class="rounded-lg border border-red-200 bg-red-50 p-4 text-red-800" role="alert">
            <p class="font-semibold">Error</p>
            <p>{fetchError}</p>
            <p class="mt-2">
              <a href="/politicians" class="text-red-900 underline hover:no-underline">
                Try viewing politicians list
              </a>
            </p>
          </div>
        ) : politicians.length === 0 ? (
          <div class="rounded-lg border border-amber-200 bg-amber-50 p-6 text-amber-900" role="alert">
            <p class="font-semibold text-lg mb-2">No Politicians Available</p>
            <p class="text-amber-800">
              There are no politicians in the system yet. Politicians must be added before statements can be created.
            </p>
          </div>
        ) : (
          <NewStatementForm client:load politicians={politicians} currentUserId={user.id} />
        )
      }
    </div>
  </main>
</Layout>
